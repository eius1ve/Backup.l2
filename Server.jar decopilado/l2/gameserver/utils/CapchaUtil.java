/*
 * Decompiled with CFR 0.152.
 */
package l2.gameserver.utils;

import l2.commons.util.Rnd;

public class CapchaUtil {
    private static final String gC = "WJFZNYSGVRU57912";
    private static final int[] bk = new int[]{0, 8388707, 8388773, 198, 8388905, 330, 396, 8389103, 8389169, 594, 660, 8389367, 792, 8389499, 8389565, 990, 8389633, 1122, 1188, 8389831, 1320, 8389963, 8390029, 1518, 1584, 8390227, 8390293, 1782, 8390425, 1914, 1980, 8390623, 8390753, 2050, 2244, 8390823, 2376, 8390955, 8391149, 2446, 2640, 8391219, 8391413, 2710, 8391545, 2842, 3036, 8391615, 3168, 8391683, 8391877, 3238, 8392009, 3370, 3564, 8392079, 8392273, 3634, 3828, 8392343, 3960, 8392475, 8392669, 4030, 8392865, 4290, 4100, 8392807, 4488, 8393195, 8393005, 4430, 4752, 8393459, 8393269, 4694, 8393657, 5082, 4892, 8393599, 5280, 8393923, 8393733, 5222, 8394121, 5610, 5420, 8394063, 8394385, 5874, 5684, 8394327, 6072, 8394715, 8394525, 6014, 6336, 8394915, 8394853, 6150, 8395241, 6538, 6476, 8395055, 8395505, 6802, 6740, 8395319, 7128, 8395707, 8395645, 6942, 8395969, 7330, 7268, 8395783, 7656, 8396171, 8396109, 7470, 7920, 8396435, 8396373, 7734, 8396761, 8122, 8060, 8396575, 8397089, 8514, 8580, 8397287, 8200, 8396907, 8396973, 8398, 8976, 8397683, 8397749, 9174, 8397369, 8794, 8860, 8397567, 9504, 8398147, 8398213, 9702, 8397833, 9322, 9388, 8398031, 8398609, 10098, 10164, 8398807, 9784, 8398427, 8398493, 9982, 10560, 8399139, 8399333, 10630, 8398953, 10250, 10444, 8399023, 8399729, 11026, 11220, 8399799, 10840, 8399419, 8399613, 10910, 8400193, 11554, 11748, 8400263, 11368, 8399883, 8400077, 11438, 12144, 8400659, 8400853, 12214, 8400473, 11834, 12028, 8400543, 12672, 8401379, 8401189, 12614, 8401065, 12490, 12300, 8401007, 8401841, 13266, 13076, 8401783, 12952, 8401659, 8401469, 12894, 8402305, 13794, 13604, 8402247, 13480, 8402123, 8401933, 13422, 14256, 8402899, 8402709, 14198, 8402585, 14074, 13884, 8402527, 8403425, 14722, 14660, 8403239, 14536, 8403115, 8403053, 14350, 15312, 8403891, 8403829, 15126, 8403705, 15002, 14940, 8403519, 15840, 8404355, 8404293, 15654, 8404169, 15530, 15468, 8403983, 8404945, 16306, 16244, 8404759, 16120, 8404635, 8404573, 15934};
    private static final long[][][] a = new long[][][]{new long[][]{{3168L, 891726332900150624L, 963777742074021568L, 0L}, {96L, 0x60006000600060L, 27028607257805760L, 0L}, {2016L, 432352161397999552L, 0x600060006000600L, 0L}, {2016L, 27022010093666688L, 216179379284215776L, 0L}, {1584L, 445864265978480368L, 463877564951168560L, 0L}, {1632L, 459374171485373376L, 0x180018001800180L, 0L}, {960L, 459373759111889280L, 54043607952262080L, 0L}, {960L, 0x660066006000600L, 495402968504337376L, 0L}, {1632L, 0x660066006600660L, 459374171441332608L, 0L}, {1984L, 459374171485374400L, 0x6C0066006600660L, 0L}, {1632L, 0x660066006600660L, 459374171485373376L, 0L}, {2016L, 432352161397999552L, 27022010093668224L, 0L}, {2016L, 27022422410527104L, 108089689642107648L, 0L}, {960L, 0x660066006600660L, 279224001555858304L, 0L}, {192L, 126109310794072256L, 0xC000C000C000C0L, 0L}, {960L, 0x6600660006000C0L, 108089689692440544L, 0L}}, new long[][]{{0x61866186L, 7027413971481932748L, 3921569213490666552L, 2033375231757778944L}, {0x3F00030L, 0x30003000300030L, 0x30003000300060L, 0x7C0000000000000L}, {133694976L, 432352161397999608L, 0x600060006000600L, 0x600000000000000L}, {0xFF00030L, 27022422410527104L, 216176080749333504L, 0xFF0000000000000L}, {402922500L, 2162879027319411140L, 1217115889971499036L, 0x100C000000000000L}, {0x18181818L, 878215327742165952L, 270217626934837632L, 0x180000000000000L}, {66061848L, 871459722295773168L, 33777100487396400L, 0x7E0000000000000L}, {66063896L, 871472916577917176L, 1736164147912511000L, 0x3F0000000000000L}, {405805104L, 1742906662456396896L, 486396181572748160L, 0x380000000000000L}, {266341424L, 878215327839685728L, 1134920712758234136L, 0xC0C000000000000L}, {0x18181818L, 0x1818181818181818L, 1736164148113837104L, 0x7E0000000000000L}, {133694976L, 432352161429454896L, 6755502723173424L, 0x7E0000000000000L}, {267911216L, 13511211205263552L, 54044844821054208L, 0x300000000000000L}, {65013296L, 871459825317840408L, 285978679420387424L, 0x7C0000000000000L}, {25167744L, 0x180018001800180L, 0x180018001800180L, 0x7E0000000000000L}, {132123696L, 871446630976978992L, 27023521959904768L, 0xFF8000000000000L}}, new long[][]{{12684L, 3570283082392542168L, 1898283117340265520L, 0L}, {992L, 0x60006000600060L, 27022010087376832L, 0L}, {2016L, 432352161397999552L, 0x600060006000600L, 0L}, {2016L, 54044020187332992L, 216176080749332448L, 0L}, {3088L, 1013322079691344272L, 635017237047019568L, 0L}, {3120L, 878208936786788736L, 0x180018001800180L, 0L}, {1984L, 873711522084292544L, 63050807240558528L, 0L}, {992L, 436862358195801088L, 932258523267466224L, 0L}, {3168L, 0xC600C6006C006C0L, 486392608105431936L, 0L}, {4032L, 891726332883374016L, 972791538492902448L, 0L}, {3120L, 0xC300C300C300C30L, 878215327839684576L, 0L}, {2016L, 432352161427357792L, 27022010288703424L, 0L}, {2032L, 13511211205263552L, 54044844821054208L, 0L}, {1984L, 0xC600C600C600C60L, 567453965378127744L, 0L}, {384L, 540433604577067392L, 108088040349501408L, 0L}, {992L, 0x630003000300060L, 54044844846221296L, 0L}}, new long[][]{{2056L, 578723066359581472L, 1387132050212919680L, 0x1100000000000000L}, {480L, 0x20002000400040L, 18014948273684736L, 0x1E00000000000000L}, {1020L, 0x200020004000400L, 567462349275924480L, 0x1000000000000000L}, {1020L, 2251868535259200L, 36032095620958208L, 2296835809958952960L}, {776L, 218427914907026576L, 328772256230541472L, 0x1040000000000000L}, {2064L, 585477022604592384L, 0x600040004000400L, 0x800000000000000L}, {496L, 148620986776813952L, 54043470410549312L, 0xF80000000000000L}, {248L, 218428980108199936L, 608003679724768288L, 0x7C0000000000000L}, {2056L, 580973216812500032L, 324265220568516096L, 0x400000000000000L}, {496L, 78814127384953376L, 270220925515859040L, 0x820000000000000L}, {520L, 146369221340693520L, 292742909447374912L, 0x780000000000000L}, {16253184L, 72058693608276032L, 0x40004000400080L, 0xF00000000000000L}, {66584592L, 9007474141036800L, 144119586189477888L, 0x1000000000000000L}, {15728920L, 150872855327802928L, 279223314340120704L, 0xF00000000000000L}, {68722622944L, 0x20002000400040L, 0x40008000800080L, 0xFE0000000000000L}, {15728904L, 2251834174472224L, 18016047810479104L, 0xFC0000000000000L}}};

    public static final int buildCapcha(short s, byte by) {
        return (s | by << 16) & 0xFFFFFF;
    }

    public static final short getCapchaTextPart(int n) {
        return (short)(n & 0xFFFF);
    }

    public static final byte getCapchaFontPart(int n) {
        return (byte)(n >> 16 & 0xFF);
    }

    public static final short rgb888TOrgb565(int n) {
        return (short)((n >> 8 & 0xF808 | n >> 5 & 0x7E0 | n >> 3 & 0x1F) & 0xFFFF);
    }

    public static final String getCapchaText(int n) {
        char[] cArray = new char[4];
        short s = CapchaUtil.getCapchaTextPart(n);
        for (int i = 0; i < 4; ++i) {
            cArray[i] = gC.charAt(s >> (i << 2) & 0xF);
        }
        return new String(cArray);
    }

    public static final byte[] getCapchaImage(int n, int n2) {
        byte[] byArray = new byte[640];
        short s = CapchaUtil.getCapchaTextPart(n);
        byte by = CapchaUtil.getCapchaFontPart(n);
        long l = 0L;
        short s2 = CapchaUtil.rgb888TOrgb565(n2);
        short s3 = ~s2;
        byArray[0] = 68;
        byArray[1] = 68;
        byArray[2] = 83;
        byArray[3] = 32;
        byArray[4] = 124;
        byArray[8] = 7;
        byArray[9] = 16;
        byArray[10] = 8;
        byArray[12] = 16;
        byArray[16] = 64;
        byArray[21] = 2;
        byArray[76] = 32;
        byArray[80] = 4;
        byArray[84] = 68;
        byArray[85] = 88;
        byArray[86] = 84;
        byArray[87] = 49;
        for (int i = 0; i < 4; ++i) {
            for (int j = 0; j < 4; ++j) {
                l = a[by >> (j << 1) & 3][s >> (j << 2) & 0xF][i];
                int n3 = 128 + (j << 5) + (i << 7);
                byArray[n3 + 0] = (byte)(s2 & 0xFF);
                byArray[n3 + 1] = (byte)(s2 >> 8 & 0xFF);
                byArray[n3 + 2] = (byte)(s3 & 0xFF);
                byArray[n3 + 3] = (byte)(s3 >> 8 & 0xFF);
                byArray[n3 + 4] = (byte)(l >> 63 & 1L | l >> 60 & 4L | l >> 57 & 0x10L | l >> 54 & 0x40L);
                byArray[n3 + 5] = (byte)(l >> 47 & 1L | l >> 44 & 4L | l >> 41 & 0x10L | l >> 38 & 0x40L);
                byArray[n3 + 6] = (byte)(l >> 31 & 1L | l >> 28 & 4L | l >> 25 & 0x10L | l >> 22 & 0x40L);
                byArray[n3 + 7] = (byte)(l >> 15 & 1L | l >> 12 & 4L | l >> 9 & 0x10L | l >> 6 & 0x40L);
                byArray[n3 + 8] = (byte)(s2 & 0xFF);
                byArray[n3 + 9] = (byte)(s2 >> 8 & 0xFF);
                byArray[n3 + 10] = (byte)(s3 & 0xFF);
                byArray[n3 + 11] = (byte)(s3 >> 8 & 0xFF);
                byArray[n3 + 12] = (byte)(l >> 59 & 1L | l >> 56 & 4L | l >> 53 & 0x10L | l >> 50 & 0x40L);
                byArray[n3 + 13] = (byte)(l >> 43 & 1L | l >> 40 & 4L | l >> 37 & 0x10L | l >> 34 & 0x40L);
                byArray[n3 + 14] = (byte)(l >> 27 & 1L | l >> 24 & 4L | l >> 21 & 0x10L | l >> 18 & 0x40L);
                byArray[n3 + 15] = (byte)(l >> 11 & 1L | l >> 8 & 4L | l >> 5 & 0x10L | l >> 2 & 0x40L);
                byArray[n3 + 16] = (byte)(s2 & 0xFF);
                byArray[n3 + 17] = (byte)(s2 >> 8 & 0xFF);
                byArray[n3 + 18] = (byte)(s3 & 0xFF);
                byArray[n3 + 19] = (byte)(s3 >> 8 & 0xFF);
                byArray[n3 + 20] = (byte)(l >> 55 & 1L | l >> 52 & 4L | l >> 49 & 0x10L | l >> 46 & 0x40L);
                byArray[n3 + 21] = (byte)(l >> 39 & 1L | l >> 36 & 4L | l >> 33 & 0x10L | l >> 30 & 0x40L);
                byArray[n3 + 22] = (byte)(l >> 23 & 1L | l >> 20 & 4L | l >> 17 & 0x10L | l >> 14 & 0x40L);
                byArray[n3 + 23] = (byte)(l >> 7 & 1L | l >> 4 & 4L | l >> 1 & 0x10L | l << 2 & 0x40L);
                byArray[n3 + 24] = (byte)(s2 & 0xFF);
                byArray[n3 + 25] = (byte)(s2 >> 8 & 0xFF);
                byArray[n3 + 26] = (byte)(s3 & 0xFF);
                byArray[n3 + 27] = (byte)(s3 >> 8 & 0xFF);
                byArray[n3 + 28] = (byte)(l >> 51 & 1L | l >> 48 & 4L | l >> 45 & 0x10L | l >> 42 & 0x40L);
                byArray[n3 + 29] = (byte)(l >> 35 & 1L | l >> 32 & 4L | l >> 29 & 0x10L | l >> 26 & 0x40L);
                byArray[n3 + 30] = (byte)(l >> 19 & 1L | l >> 16 & 4L | l >> 13 & 0x10L | l >> 10 & 0x40L);
                byArray[n3 + 31] = (byte)(l >> 3 & 1L | l >> 0 & 4L | l << 3 & 0x10L | l << 6 & 0x40L);
            }
        }
        return byArray;
    }

    public static final int getId(int n) {
        short s = CapchaUtil.getCapchaTextPart(n);
        byte by = CapchaUtil.getCapchaFontPart(n);
        int n2 = 11994318;
        n2 = n2 << 8 ^ bk[(n2 >>> 16 ^ s >> 8 & 0xFF) & 0xFF];
        n2 = n2 << 8 ^ bk[(n2 >>> 16 ^ s & 0xFF) & 0xFF];
        n2 = n2 << 8 ^ bk[(n2 >>> 16 ^ by) & 0xFF];
        return n2 & 0xFFFFFF;
    }

    public static final int RndCapcha() {
        return CapchaUtil.buildCapcha((short)Rnd.get(65535), (byte)Rnd.get(255));
    }

    public static final int RndRGB888Color() {
        int n = Rnd.get(255);
        int n2 = Rnd.get(255);
        int n3 = Rnd.get(255);
        if (n >= 122 && n <= 134 && n2 >= 122 && n2 <= 134 && n3 >= 122 && n3 <= 134) {
            n = 0;
            n2 = 0;
            n3 = 0;
        }
        return 0xFFFFFF & (n << 16 & 0xFF0000) | n2 << 8 & 0xFF00 | n3 & 0xFF;
    }

    public static final boolean IsValidEntry(int n, String string) {
        return string.trim().toUpperCase().equalsIgnoreCase(CapchaUtil.getCapchaText(n));
    }
}
